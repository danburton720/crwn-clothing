{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectBag = state => state.bag;\n\nexport const selectBagItems = createSelector([selectBag], bag => bag.bagItems);\nexport const selectBagHidden = createSelector([selectBag], bag => bag.hidden);\nexport const selectBagItemsCount = createSelector([selectBagItems], bagItems => bagItems.reduce((accumulatedQuantity, bagItem) => accumulatedQuantity + bagItem.quantity, 0));\nexport const selectBagTotal = createSelector([selectBagItems], bagItems => bagItems.reduce((accumulatedQuantity, bagItem) => accumulatedQuantity + bagItem.quantity * bagItem.price, 0));","map":{"version":3,"sources":["C:/Users/Dan/WebstormProjects/React_Udemy/crwn-clothing/client/src/redux/bag/bag.selectors.js"],"names":["createSelector","selectBag","state","bag","selectBagItems","bagItems","selectBagHidden","hidden","selectBagItemsCount","reduce","accumulatedQuantity","bagItem","quantity","selectBagTotal","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAIA,KAAK,CAACC,GAAjC;;AAEA,OAAO,MAAMC,cAAc,GAAGJ,cAAc,CACxC,CAACC,SAAD,CADwC,EAEvCE,GAAD,IAASA,GAAG,CAACE,QAF2B,CAArC;AAKP,OAAO,MAAMC,eAAe,GAAGN,cAAc,CACzC,CAACC,SAAD,CADyC,EAEzCE,GAAG,IAAIA,GAAG,CAACI,MAF8B,CAAtC;AAKP,OAAO,MAAMC,mBAAmB,GAAGR,cAAc,CAC7C,CAACI,cAAD,CAD6C,EAE7CC,QAAQ,IACRA,QAAQ,CAACI,MAAT,CACI,CAACC,mBAAD,EAAsBC,OAAtB,KACID,mBAAmB,GAAGC,OAAO,CAACC,QAFtC,EAGI,CAHJ,CAH6C,CAA1C;AAUP,OAAO,MAAMC,cAAc,GAAGb,cAAc,CACxC,CAACI,cAAD,CADwC,EAExCC,QAAQ,IACJA,QAAQ,CAACI,MAAT,CACI,CAACC,mBAAD,EAAsBC,OAAtB,KACID,mBAAmB,GAAGC,OAAO,CAACC,QAAR,GAAmBD,OAAO,CAACG,KAFzD,EAGI,CAHJ,CAHoC,CAArC","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\nconst selectBag = state => state.bag;\r\n\r\nexport const selectBagItems = createSelector(\r\n    [selectBag],\r\n    (bag) => bag.bagItems\r\n);\r\n\r\nexport const selectBagHidden = createSelector(\r\n    [selectBag],\r\n    bag => bag.hidden\r\n);\r\n\r\nexport const selectBagItemsCount = createSelector(\r\n    [selectBagItems],\r\n    bagItems =>\r\n    bagItems.reduce(\r\n        (accumulatedQuantity, bagItem) =>\r\n            accumulatedQuantity + bagItem.quantity,\r\n        0\r\n    )\r\n);\r\n\r\nexport const selectBagTotal = createSelector(\r\n    [selectBagItems],\r\n    bagItems =>\r\n        bagItems.reduce(\r\n            (accumulatedQuantity, bagItem) =>\r\n                accumulatedQuantity + bagItem.quantity * bagItem.price,\r\n            0\r\n        )\r\n)"]},"metadata":{},"sourceType":"module"}