{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dan\\\\WebstormProjects\\\\React_Udemy\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\stripe-button\\\\stripe-button.component.jsx\";\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { clearBag } from '../../redux/bag/bag.actions';\n\nconst StripeCheckoutButton = ({\n  price,\n  clearBag\n}) => {\n  const priceForStripe = price * 100;\n  const publishableKey = 'pk_test_51GtX9oLn3ZuLC2o9zNTUBSl7mNJNjRAnIivxMh3yoD2DrSnId9JghGRPJx4BudmhEqIUAnufUAK460vnYLBhPW2300YJFNsBqK';\n\n  const onToken = token => {\n    axios({\n      url: 'payment',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        token\n      }\n    }).then(response => {\n      alert('Payment successful');\n      clearBag();\n    }).catch(error => {\n      console.log('Payment error: ', JSON.parse(error));\n      alert('There was an issue with your payment. Please make sure you use the provided credit card.');\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(StripeCheckout, {\n    label: \"Pay Now\",\n    name: \"CRWN Clothing Ltd.\",\n    billingAddress: true,\n    shippingAddress: true,\n    image: \"https://svgshare.com/i/CUz.svg\",\n    description: `Your total is £${price}`,\n    amount: priceForStripe,\n    panelLabel: \"Pay Now\",\n    currency: \"GBP\",\n    token: onToken,\n    stripeKey: publishableKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  });\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearBag: () => dispatch(clearBag())\n});\n\nexport default connect(null, mapDispatchToProps)(StripeCheckoutButton);","map":{"version":3,"sources":["C:/Users/Dan/WebstormProjects/React_Udemy/crwn-clothing/client/src/components/stripe-button/stripe-button.component.jsx"],"names":["React","StripeCheckout","axios","connect","clearBag","StripeCheckoutButton","price","priceForStripe","publishableKey","onToken","token","url","method","data","amount","then","response","alert","catch","error","console","log","JSON","parse","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,QAAT,QAAyB,6BAAzB;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASF,EAAAA;AAAT,CAAD,KAAyB;AACpD,QAAMG,cAAc,GAAGD,KAAK,GAAG,GAA/B;AACA,QAAME,cAAc,GAAG,6GAAvB;;AAEA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACrBR,IAAAA,KAAK,CAAC;AACFS,MAAAA,GAAG,EAAE,SADH;AAEFC,MAAAA,MAAM,EAAE,MAFN;AAGFC,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAEP,cADN;AAEFG,QAAAA;AAFE;AAHJ,KAAD,CAAL,CAOGK,IAPH,CAOQC,QAAQ,IAAI;AAChBC,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACAb,MAAAA,QAAQ;AACX,KAVD,EAUGc,KAVH,CAUSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAA/B;AACAF,MAAAA,KAAK,CAAC,0FAAD,CAAL;AACH,KAbD;AAcH,GAfD;;AAiBA,sBACI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,IAAA,IAAI,EAAC,oBAFT;AAGI,IAAA,cAAc,MAHlB;AAII,IAAA,eAAe,MAJnB;AAKI,IAAA,KAAK,EAAC,gCALV;AAMI,IAAA,WAAW,EAAG,kBAAiBX,KAAM,EANzC;AAOI,IAAA,MAAM,EAAEC,cAPZ;AAQI,IAAA,UAAU,EAAC,SARf;AASI,IAAA,QAAQ,EAAC,KATb;AAUI,IAAA,KAAK,EAAEE,OAVX;AAWI,IAAA,SAAS,EAAED,cAXf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAeD,CApCD;;AAsCA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCrB,EAAAA,QAAQ,EAAE,MAAMqB,QAAQ,CAACrB,QAAQ,EAAT;AADY,CAAL,CAAnC;;AAIA,eAAeD,OAAO,CAClB,IADkB,EAElBqB,kBAFkB,CAAP,CAGbnB,oBAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { clearBag } from '../../redux/bag/bag.actions';\r\n\r\nconst StripeCheckoutButton = ({ price, clearBag }) => {\r\n  const priceForStripe = price * 100;\r\n  const publishableKey = 'pk_test_51GtX9oLn3ZuLC2o9zNTUBSl7mNJNjRAnIivxMh3yoD2DrSnId9JghGRPJx4BudmhEqIUAnufUAK460vnYLBhPW2300YJFNsBqK';\r\n\r\n  const onToken = token => {\r\n      axios({\r\n          url: 'payment',\r\n          method: 'post',\r\n          data: {\r\n              amount: priceForStripe,\r\n              token\r\n          }\r\n      }).then(response => {\r\n          alert('Payment successful');\r\n          clearBag();\r\n      }).catch(error => {\r\n          console.log('Payment error: ', JSON.parse(error));\r\n          alert('There was an issue with your payment. Please make sure you use the provided credit card.')\r\n      });\r\n  };\r\n\r\n  return (\r\n      <StripeCheckout\r\n          label='Pay Now'\r\n          name='CRWN Clothing Ltd.'\r\n          billingAddress\r\n          shippingAddress\r\n          image='https://svgshare.com/i/CUz.svg'\r\n          description={`Your total is £${price}`}\r\n          amount={priceForStripe}\r\n          panelLabel='Pay Now'\r\n          currency='GBP'\r\n          token={onToken}\r\n          stripeKey={publishableKey}\r\n      />\r\n  )\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    clearBag: () => dispatch(clearBag())\r\n});\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(StripeCheckoutButton);"]},"metadata":{},"sourceType":"module"}