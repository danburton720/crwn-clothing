{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dan\\\\WebstormProjects\\\\React_Udemy\\\\crwn-clothing\\\\src\\\\components\\\\stripe-button\\\\stripe-button.component.jsx\";\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { connect } from 'react-redux';\nimport { addItem, clearAllItemsFromCart, clearItemFromCart, removeItem } from '../../redux/cart/cart.actions';\n\nconst StripeCheckoutButton = ({\n  price\n}) => {\n  const priceForStripe = price * 100;\n  const publishableKey = 'pk_test_51GtX9oLn3ZuLC2o9zNTUBSl7mNJNjRAnIivxMh3yoD2DrSnId9JghGRPJx4BudmhEqIUAnufUAK460vnYLBhPW2300YJFNsBqK';\n\n  const onToken = token => {\n    console.log(token); // pass this to backend to process rather than just log\n\n    alert('Payment Successful');\n    clearAllItemsFromCart;\n  };\n\n  return /*#__PURE__*/React.createElement(StripeCheckout, {\n    label: \"Pay Now\",\n    name: \"CRWN Clothing Ltd.\",\n    billingAddress: true,\n    shippingAddress: true,\n    image: \"https://svgshare.com/i/CUz.svg\",\n    description: `Your total is £${price}`,\n    amount: priceForStripe,\n    panelLabel: \"Pay Now\",\n    currency: \"GBP\",\n    token: onToken,\n    stripeKey: publishableKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  });\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearAllItemsFromCart: dispatch(clearAllItemsFromCart)\n});\n\nexport default connect(null, mapDispatchToProps)(StripeCheckoutButton);","map":{"version":3,"sources":["C:/Users/Dan/WebstormProjects/React_Udemy/crwn-clothing/src/components/stripe-button/stripe-button.component.jsx"],"names":["React","StripeCheckout","connect","addItem","clearAllItemsFromCart","clearItemFromCart","removeItem","StripeCheckoutButton","price","priceForStripe","publishableKey","onToken","token","console","log","alert","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAAQC,OAAR,EAAiBC,qBAAjB,EAAwCC,iBAAxC,EAA2DC,UAA3D,QAA4E,+BAA5E;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC1C,QAAMC,cAAc,GAAGD,KAAK,GAAG,GAA/B;AACA,QAAME,cAAc,GAAG,6GAAvB;;AAEA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADqB,CACD;;AACpBG,IAAAA,KAAK,CAAC,oBAAD,CAAL;AACAX,IAAAA,qBAAqB;AACxB,GAJD;;AAMA,sBACI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,IAAA,IAAI,EAAC,oBAFT;AAGI,IAAA,cAAc,MAHlB;AAII,IAAA,eAAe,MAJnB;AAKI,IAAA,KAAK,EAAC,gCALV;AAMI,IAAA,WAAW,EAAG,kBAAiBI,KAAM,EANzC;AAOI,IAAA,MAAM,EAAEC,cAPZ;AAQI,IAAA,UAAU,EAAC,SARf;AASI,IAAA,QAAQ,EAAC,KATb;AAUI,IAAA,KAAK,EAAEE,OAVX;AAWI,IAAA,SAAS,EAAED,cAXf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAeD,CAzBD;;AA2BA,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AACpCb,EAAAA,qBAAqB,EAAEa,QAAQ,CAACb,qBAAD;AADK,CAAL,CAAnC;;AAIA,eAAeF,OAAO,CAClB,IADkB,EAElBc,kBAFkB,CAAP,CAGbT,oBAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {addItem, clearAllItemsFromCart, clearItemFromCart, removeItem} from '../../redux/cart/cart.actions';\r\n\r\nconst StripeCheckoutButton = ({ price }) => {\r\n  const priceForStripe = price * 100;\r\n  const publishableKey = 'pk_test_51GtX9oLn3ZuLC2o9zNTUBSl7mNJNjRAnIivxMh3yoD2DrSnId9JghGRPJx4BudmhEqIUAnufUAK460vnYLBhPW2300YJFNsBqK';\r\n\r\n  const onToken = token => {\r\n      console.log(token); // pass this to backend to process rather than just log\r\n      alert('Payment Successful');\r\n      clearAllItemsFromCart;\r\n  };\r\n\r\n  return (\r\n      <StripeCheckout\r\n          label='Pay Now'\r\n          name='CRWN Clothing Ltd.'\r\n          billingAddress\r\n          shippingAddress\r\n          image='https://svgshare.com/i/CUz.svg'\r\n          description={`Your total is £${price}`}\r\n          amount={priceForStripe}\r\n          panelLabel='Pay Now'\r\n          currency='GBP'\r\n          token={onToken}\r\n          stripeKey={publishableKey}\r\n      />\r\n  )\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    clearAllItemsFromCart: dispatch(clearAllItemsFromCart)\r\n});\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(StripeCheckoutButton);"]},"metadata":{},"sourceType":"module"}