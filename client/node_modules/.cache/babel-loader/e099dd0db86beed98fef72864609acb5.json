{"ast":null,"code":"import { BagActionTypes } from './bag.types';\nimport { addItemToBag, removeItemFromBag } from './bag.utils';\nconst INITIAL_STATE = {\n  hidden: true,\n  bagItems: []\n};\n\nconst bagReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case BagActionTypes.TOGGLE_BAG_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case BagActionTypes.ADD_ITEM:\n      return { ...state,\n        bagItems: addItemToBag(state.bagItems, action.payload)\n      };\n\n    case BagActionTypes.REMOVE_ITEM:\n      return { ...state,\n        bagItems: removeItemFromBag(state.bagItems, action.payload)\n      };\n\n    case BagActionTypes.CLEAR_ITEM_FROM_BAG:\n      return { ...state,\n        bagItems: state.bagItems.filter(bagItem => bagItem.id !== action.payload.id)\n      };\n\n    case BagActionTypes.CLEAR_BAG:\n      return { ...state,\n        bagItems: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default bagReducer;","map":{"version":3,"sources":["C:/Users/Dan/WebstormProjects/React_Udemy/crwn-clothing/src/redux/bag/bag.reducer.js"],"names":["BagActionTypes","addItemToBag","removeItemFromBag","INITIAL_STATE","hidden","bagItems","bagReducer","state","action","type","TOGGLE_BAG_HIDDEN","ADD_ITEM","payload","REMOVE_ITEM","CLEAR_ITEM_FROM_BAG","filter","bagItem","id","CLEAR_BAG"],"mappings":"AAAA,SAASA,cAAT,QAA+B,aAA/B;AACA,SAAQC,YAAR,EAAsBC,iBAAtB,QAA8C,aAA9C;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,IADU;AAElBC,EAAAA,QAAQ,EAAE;AAFQ,CAAtB;;AAKA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,cAAc,CAACU,iBAApB;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFZ,OAAP;;AAIJ,SAAKJ,cAAc,CAACW,QAApB;AACI,aAAO,EACH,GAAGJ,KADA;AAEHF,QAAAA,QAAQ,EAAEJ,YAAY,CAACM,KAAK,CAACF,QAAP,EAAiBG,MAAM,CAACI,OAAxB;AAFnB,OAAP;;AAIJ,SAAKZ,cAAc,CAACa,WAApB;AACI,aAAO,EACH,GAAGN,KADA;AAEHF,QAAAA,QAAQ,EAAEH,iBAAiB,CAACK,KAAK,CAACF,QAAP,EAAiBG,MAAM,CAACI,OAAxB;AAFxB,OAAP;;AAIJ,SAAKZ,cAAc,CAACc,mBAApB;AACI,aAAO,EACH,GAAGP,KADA;AAEHF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeU,MAAf,CACNC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeT,MAAM,CAACI,OAAP,CAAeK,EADnC;AAFP,OAAP;;AAMJ,SAAKjB,cAAc,CAACkB,SAApB;AACI,aAAO,EACH,GAAGX,KADA;AAEHF,QAAAA,QAAQ,EAAE;AAFP,OAAP;;AAIJ;AACI,aAAOE,KAAP;AA7BR;AA+BH,CAhCD;;AAkCA,eAAeD,UAAf","sourcesContent":["import { BagActionTypes } from './bag.types';\r\nimport {addItemToBag, removeItemFromBag} from './bag.utils'\r\n\r\nconst INITIAL_STATE = {\r\n    hidden: true,\r\n    bagItems: []\r\n};\r\n\r\nconst bagReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case BagActionTypes.TOGGLE_BAG_HIDDEN:\r\n            return {\r\n                ...state,\r\n                hidden: !state.hidden\r\n            };\r\n        case BagActionTypes.ADD_ITEM:\r\n            return {\r\n                ...state,\r\n                bagItems: addItemToBag(state.bagItems, action.payload)\r\n            };\r\n        case BagActionTypes.REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                bagItems: removeItemFromBag(state.bagItems, action.payload)\r\n            };\r\n        case BagActionTypes.CLEAR_ITEM_FROM_BAG:\r\n            return {\r\n                ...state,\r\n                bagItems: state.bagItems.filter(\r\n                    bagItem => bagItem.id !== action.payload.id\r\n                )\r\n            };\r\n        case BagActionTypes.CLEAR_BAG:\r\n            return {\r\n                ...state,\r\n                bagItems: []\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default bagReducer;\r\n\r\n"]},"metadata":{},"sourceType":"module"}